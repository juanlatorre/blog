{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","a","createElement","className","title","keywords","to","href","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","m","module","exports","require","default","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","object","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-e4551a39561a24f0b1a6.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport SEO from \"../components/seo\"\n\nexport default () => (\n  <section className=\"hero is-fullheight\">\n    <SEO title=\"Inicio\" keywords={[`gatsby`, `application`, `react`]} />\n    <div className=\"hero-body\">\n      <div className=\"container has-text-centered\">\n        <h1 className=\"title is-size-1\">\n          Hola, soy Juan Latorre\n        </h1>\n        <h2 className=\"subtitle is-size-4\">\n          Desarrollador web, m√≥vil y de videojuegos.\n        </h2>\n        <div className=\"is-divider\"></div>\n        <Link className=\"index button is-link is-outlined\" to=\"/blog/\">Blog</Link>\n        <Link className=\"index button is-link is-outlined\" to=\"/trabajos/\">Trabajos</Link>\n        <a href=\"https://twitter.com/unnamed_query\" className=\"index button is-link is-outlined\">Twitter</a>\n        <a href=\"https://github.com/juanlatorre\" className=\"index button is-link is-outlined\">Github</a>\n        <Link className=\"index button is-link is-outlined\" to=\"/contacto/\">Contacto</Link>\n      </div>\n    </div>\n  </section>\n)\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `es`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}